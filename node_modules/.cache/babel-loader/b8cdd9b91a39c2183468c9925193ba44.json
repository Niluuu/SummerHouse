{"ast":null,"code":"import \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nvar _jsxFileName = \"/home/nilufar/Desktop/my projects/mymp3/src/components/movies.js\";\nimport React, { Component } from 'react';\nimport play from '../img/play-button.png';\nimport { connect } from 'react-redux';\nimport { fetchMovies, getMovie } from '../actions';\nimport axios from 'axios';\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMoveData = id => {\n      this.props.dispatch(getMovie(id));\n    };\n  }\n\n  componentWillMount() {\n    // this.props.dispatch(fetchMovies())\n    let config = {\n      headers: {\n        \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"d0a0b75ad8mshc27545179143e0bp134514jsn8f660da131c4\"\n      },\n      params: {\n        \"q\": \"eminem\"\n      }\n    };\n    axios.get(\"https://deezerdevs-deezer.p.rapidapi.com/search\") // We get the API response and receive data in JSON format...\n    .then(response => response.json()) // ...then we update the users state\n    .then(data => console.log(data));\n  }\n\n  render() {\n    const _this$props = this.props,\n          movies = _this$props.movies,\n          movie = _this$props.movie;\n    console.log(\"movie\", movie);\n    return React.createElement(\"div\", {\n      className: \"movie-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      gutter: [32, 32],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, movies && movies.map(movie => React.createElement(MovieList, Object.assign({}, movie, {\n      key: movie.id,\n      getMoveData: () => this.getMoveData(movie.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst MovieList = ({\n  title,\n  backdrop_path,\n  release_date,\n  id,\n  getMoveData\n}) => {\n  return React.createElement(_Col, {\n    span: 6,\n    className: \"movie-cart\",\n    onClick: getMoveData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"movie-img\",\n    style: {\n      background: backdrop_path === null ? \"#eee\" : \"url(\\\"https://image.tmdb.org/t/p/w342\".concat(backdrop_path, \"\\\")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: play,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"movie-caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    class: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    class: \"movie-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    class: \"movie-year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, release_date.substr(0, 4)), React.createElement(\"span\", {\n    class: \"movie-ganre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  error: state.moviesReducer.error,\n  movies: state.moviesReducer.movies,\n  pending: state.moviesReducer.pending,\n  movie: state.getMovieReducer.movie\n});\n\nexport default connect(mapStateToProps)(Movies);","map":{"version":3,"sources":["/home/nilufar/Desktop/my projects/mymp3/src/components/movies.js"],"names":["React","Component","play","connect","fetchMovies","getMovie","axios","Movies","getMoveData","id","props","dispatch","componentWillMount","config","headers","params","get","then","response","json","data","console","log","render","movies","movie","map","MovieList","title","backdrop_path","release_date","background","substr","mapStateToProps","state","error","moviesReducer","pending","getMovieReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport play from '../img/play-button.png';\nimport { connect } from 'react-redux';\nimport { fetchMovies, getMovie } from '../actions'\nimport axios from 'axios';\n\n\nclass Movies extends Component {\n  componentWillMount() {\n    // this.props.dispatch(fetchMovies())\n    let config = {\n      headers: {\n        \"x-rapidapi-host\": \"deezerdevs-deezer.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"d0a0b75ad8mshc27545179143e0bp134514jsn8f660da131c4\"\n      },\n      params: {\n        \"q\": \"eminem\"\n      },\n    }\n    axios.get(`https://deezerdevs-deezer.p.rapidapi.com/search`)\n      // We get the API response and receive data in JSON format...\n      .then(response => response.json())\n      // ...then we update the users state\n      .then(data =>\n        console.log(data)\n      )\n  }\n\n  getMoveData = (id) => {\n    this.props.dispatch(getMovie(id))\n  }\n\n  render() {\n    const { movies, movie } = this.props\n    console.log(\"movie\", movie)\n\n    return (\n      <div className=\"movie-section\">\n        <Row gutter={[32, 32]} >\n          {movies && movies.map((movie) =>\n            <MovieList {...movie} key={movie.id} getMoveData={() => this.getMoveData(movie.id)} />\n          )}\n        </Row>\n      </div>\n    )\n  }\n}\n\n\nconst MovieList = ({ title, backdrop_path, release_date, id, getMoveData }) => {\n  return (\n    <Col span={6} className=\"movie-cart\" onClick={getMoveData} >\n      <div className=\"movie-img\" style={{ background: backdrop_path === null ? \"#eee\" : `url(\"https://image.tmdb.org/t/p/w342${backdrop_path}\")` }} ></div>\n      <img src={play} />\n      <div class=\"movie-caption\">\n        <h3 class=\"title\">{title}</h3>\n        <div class=\"movie-info\">\n          <span class=\"movie-year\">{release_date.substr(0, 4)}</span>\n          <span class=\"movie-ganre\"></span>\n        </div>\n      </div>\n    </Col>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  error: state.moviesReducer.error,\n  movies: state.moviesReducer.movies,\n  pending: state.moviesReducer.pending,\n  movie: state.getMovieReducer.movie\n})\n\nexport default connect(mapStateToProps)(Movies);\n"]},"metadata":{},"sourceType":"module"}